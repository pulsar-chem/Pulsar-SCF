import pulsar as psr
import numpy as np
import os,sys
sys.path.insert(0,os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from pulsar_scf_test.TestCommon import make_wf
corr_ints=[2.06862805800996,0.378364253734954,0,1.82597944548123e-17,0,0.0616957514412831,0.0616957514412831,0.378364253734955,0.703864650782534,0,-1.24682379220467e-17,0,0.199785193423944,0.199785193423944,0,0,0.703891487535199,0,0,0.118467873141804,-0.118467873141804,1.82597944548123e-17,-1.24682379220467e-17,0,0.703891487535199,0,0.0925577666706937,0.0925577666706937,0,0,0,0,0.703891487535199,0,0,0.0616957514412831,0.199785193423944,0.118467873141804,0.0925577666706937,0,0.304984405444229,0.0681543245021971,0.0616957514412831,0.199785193423944,-0.118467873141804,0.0925577666706937,0,0.0681543245021971,0.304984405444229,5.37699327206994,1.25024639114232,0,7.05641124930993e-17,0,0.202782791226221,0.202782791226221,1.25024639114232,4.47305933368923,0,-6.46710471607272e-17,0,1.51448684985747,1.51448684985747,0,0,4.47162254122489,0,0,0.990732101305161,-0.990732101305161,7.05641124930993e-17,-6.46710471607272e-17,0,4.47162254122489,0,0.774049100687456,0.774049100687456,0,0,0,0,4.47162254122489,0,0,0.202782791226221,1.51448684985747,0.990732101305161,0.774049100687456,0,2.97422959239765,0.60102751598457,0.202782791226221,1.51448684985747,-0.990732101305161,0.774049100687456,0,0.60102751598457,2.97422959239765,0,0,0.144307954882376,0,0,0.00595934940865153,-0.00595934940865153,0,0,0.927927875421472,0,0,0.220702550489621,-0.220702550489621,0.144307954882376,0.927927875421472,0,-7.96497914073308e-19,0,0.396296044630796,0.396296044630796,0,0,-7.96497914073308e-19,0,0,0.109492458538532,-0.109492458538532,0,0,0,0,0,0,0,0.00595934940865153,0.220702550489621,0.396296044630796,0.109492458538532,0,0.744122453884615,-5.20417042793042e-18,-0.00595934940865153,-0.220702550489621,0.396296044630796,-0.109492458538532,0,5.20417042793042e-18,-0.744122453884615,1.48636130302608e-17,3.75626727598721e-18,0,0.144307954882376,0,0.00465598020329839,0.00465598020329839,3.75626727598721e-18,-7.83779851930359e-18,0,0.927927875421472,0,0.172432699516718,0.172432699516718,0,0,6.76421493878547e-18,0,0,0.109492458538532,-0.109492458538532,0.144307954882376,0.927927875421472,0,5.17121911063886e-18,0,0.341698240995542,0.341698240995542,0,0,0,0,6.76421493878547e-18,0,0,0.00465598020329839,0.172432699516718,0.109492458538532,0.341698240995542,0,0.58137544495827,0.126131666228473,0.00465598020329839,0.172432699516718,-0.109492458538532,0.341698240995542,0,0.126131666228473,0.58137544495827,0,0,0,0,0.144307954882376,0,0,0,0,0,0,0.927927875421472,0,0,0,0,0,0,0,0,0,0,0,0,0,-7.96497914073308e-19,0,0,0.144307954882376,0.927927875421472,0,-7.96497914073308e-19,0,0.256152876156592,0.256152876156592,0,0,0,0,0.256152876156592,0,0,0,0,0,0,0.256152876156592,0,0,4.0281030123662,0.949824925192127,0.0443598370211841,0.034657897839038,0,0.157314444378901,0.153306878879211,0.949824925192127,3.8479404538515,0.480242880023388,0.375208968099398,0,1.74968812547273,1.34075070901699,0.0443598370211841,0.480242880023388,3.89973594391888,0.0892667957333669,0,1.41080790741185,-0.747114064402756,0.034657897839038,0.375208968099398,0.0892667957333669,3.85522355421047,0,1.10225013455835,0.814500862029787,0,0,0,0,3.78548029781691,0,0,0.157314444378901,1.74968812547273,1.41080790741185,1.10225013455835,0,5.1414537693097,0.724138382572759,0.153306878879211,1.34075070901699,-0.747114064402756,0.814500862029787,0,0.724138382572759,2.86124649743341,4.0281030123662,0.949824925192127,-0.0443598370211841,0.034657897839038,0,0.153306878879211,0.157314444378901,0.949824925192127,3.8479404538515,-0.480242880023388,0.375208968099398,0,1.34075070901699,1.74968812547273,-0.0443598370211841,-0.480242880023388,3.89973594391888,-0.0892667957333669,0,0.747114064402756,-1.41080790741185,0.034657897839038,0.375208968099398,-0.0892667957333669,3.85522355421047,0,0.814500862029787,1.10225013455835,0,0,0,0,3.78548029781691,0,0,0.153306878879211,1.34075070901699,0.747114064402756,0.814500862029787,0,2.86124649743341,0.724138382572759,0.157314444378901,1.74968812547273,-1.41080790741185,1.10225013455835,0,0.724138382572759,5.1414537693097
]


def run(mm):
    tester = psr.PyTester("Testing Building of the 2 electron, 3 center integrals")
    wf=make_wf()
    mm.load_module("pulsar_libint","DF3C2E","DF Ints builder")
    mm.load_module("pulsar_scf","DFInts","DFInts")
    mm.change_option("DFInts","DF_INTS_KEY","DF Ints builder")
    bs=wf.system.get_basis_set("PRIMARY")
    ints=mm.get_module("DFInts",0).calculate("???",0,wf,bs,bs,bs)[0]
    dims=ints.sizes()
    flat_ints=[]
    for i in range(dims[0]):
        for j in range(dims[1]):
            for k in range(dims[2]):
                flat_ints.append(ints.get_value([i,j,k]))
    tester.test_double_vector("3 center, 2 e matrix",flat_ints,corr_ints)
    tester.print_results()
    return tester.nfailed()

def run_test():
    with psr.ModuleAdministrator() as mm:
        return run(mm)
