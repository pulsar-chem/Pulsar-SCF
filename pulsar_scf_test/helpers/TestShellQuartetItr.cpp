#include <pulsar_scf/helpers/ShellQuartetItr.hpp>
#include <pulsar/testing/CppTester.hpp>
#include "../TestCommon.hpp"
using namespace pulsar;
using namespace pulsar_scf;

std::vector<std::array<size_t,4>> corr_quartets={
{0,0,0,0},{1,0,0,0},{1,0,1,0},{1,1,0,0},{1,1,1,0},{1,1,1,1},{2,0,0,0},{2,0,1,0},
{2,0,1,1},{2,0,2,0},{2,1,0,0},{2,1,1,0},{2,1,1,1},{2,1,2,0},{2,1,2,1},{2,2,0,0},
{2,2,1,0},{2,2,1,1},{2,2,2,0},{2,2,2,1},{2,2,2,2},{3,0,0,0},{3,0,1,0},{3,0,1,1},
{3,0,2,0},{3,0,2,1},{3,0,2,2},{3,0,3,0},{3,1,0,0},{3,1,1,0},{3,1,1,1},{3,1,2,0},
{3,1,2,1},{3,1,2,2},{3,1,3,0},{3,1,3,1},{3,2,0,0},{3,2,1,0},{3,2,1,1},{3,2,2,0},
{3,2,2,1},{3,2,2,2},{3,2,3,0},{3,2,3,1},{3,2,3,2},{3,3,0,0},{3,3,1,0},{3,3,1,1},
{3,3,2,0},{3,3,2,1},{3,3,2,2},{3,3,3,0},{3,3,3,1},{3,3,3,2},{3,3,3,3},{4,0,0,0},
{4,0,1,0},{4,0,1,1},{4,0,2,0},{4,0,2,1},{4,0,2,2},{4,0,3,0},{4,0,3,1},{4,0,3,2},
{4,0,3,3},{4,0,4,0},{4,1,0,0},{4,1,1,0},{4,1,1,1},{4,1,2,0},{4,1,2,1},{4,1,2,2},
{4,1,3,0},{4,1,3,1},{4,1,3,2},{4,1,3,3},{4,1,4,0},{4,1,4,1},{4,2,0,0},{4,2,1,0},
{4,2,1,1},{4,2,2,0},{4,2,2,1},{4,2,2,2},{4,2,3,0},{4,2,3,1},{4,2,3,2},{4,2,3,3},
{4,2,4,0},{4,2,4,1},{4,2,4,2},{4,3,0,0},{4,3,1,0},{4,3,1,1},{4,3,2,0},{4,3,2,1},
{4,3,2,2},{4,3,3,0},{4,3,3,1},{4,3,3,2},{4,3,3,3},{4,3,4,0},{4,3,4,1},{4,3,4,2},
{4,3,4,3},{4,4,0,0},{4,4,1,0},{4,4,1,1},{4,4,2,0},{4,4,2,1},{4,4,2,2},{4,4,3,0},
{4,4,3,1},{4,4,3,2},{4,4,3,3},{4,4,4,0},{4,4,4,1},{4,4,4,2},{4,4,4,3},{4,4,4,4}
};

std::map<std::array<size_t,4>,std::vector<std::array<size_t,4>>> corr_bfs=
{
    {{0,0,0,0},{{0,0,0,0},}},
    {{1,0,0,0},{{1,0,0,0},}},
    {{1,0,1,0},{{1,0,1,0},}},
    {{1,1,0,0},{{1,1,0,0},}},
    {{1,1,1,0},{{1,1,1,0},}},
    {{1,1,1,1},{{1,1,1,1},}},
    {{2,0,0,0},{{2,0,0,0},{3,0,0,0},{4,0,0,0},}},
    {{2,0,1,0},{{2,0,1,0},{3,0,1,0},{4,0,1,0},}},
    {{2,0,1,1},{{2,0,1,1},{3,0,1,1},{4,0,1,1},}},
    {{2,0,2,0},{{2,0,2,0},{2,0,3,0},{2,0,4,0},{3,0,2,0},{3,0,3,0},{3,0,4,0},{4,0,2,0},{4,0,3,0},{4,0,4,0},}},
    {{2,1,0,0},{{2,1,0,0},{3,1,0,0},{4,1,0,0},}},
    {{2,1,1,0},{{2,1,1,0},{3,1,1,0},{4,1,1,0},}},
    {{2,1,1,1},{{2,1,1,1},{3,1,1,1},{4,1,1,1},}},
    {{2,1,2,0},{{2,1,2,0},{2,1,3,0},{2,1,4,0},{3,1,2,0},{3,1,3,0},{3,1,4,0},{4,1,2,0},{4,1,3,0},{4,1,4,0},}},
    {{2,1,2,1},{{2,1,2,1},{2,1,3,1},{2,1,4,1},{3,1,2,1},{3,1,3,1},{3,1,4,1},{4,1,2,1},{4,1,3,1},{4,1,4,1},}},
    {{2,2,0,0},{{2,2,0,0},{2,3,0,0},{2,4,0,0},{3,2,0,0},{3,3,0,0},{3,4,0,0},{4,2,0,0},{4,3,0,0},{4,4,0,0},}},
    {{2,2,1,0},{{2,2,1,0},{2,3,1,0},{2,4,1,0},{3,2,1,0},{3,3,1,0},{3,4,1,0},{4,2,1,0},{4,3,1,0},{4,4,1,0},}},
    {{2,2,1,1},{{2,2,1,1},{2,3,1,1},{2,4,1,1},{3,2,1,1},{3,3,1,1},{3,4,1,1},{4,2,1,1},{4,3,1,1},{4,4,1,1},}},
    {{2,2,2,0},{{2,2,2,0},{2,2,3,0},{2,2,4,0},{2,3,2,0},{2,3,3,0},{2,3,4,0},{2,4,2,0},{2,4,3,0},{2,4,4,0},{3,2,2,0},{3,2,3,0},{3,2,4,0},{3,3,2,0},{3,3,3,0},{3,3,4,0},{3,4,2,0},{3,4,3,0},{3,4,4,0},{4,2,2,0},{4,2,3,0},{4,2,4,0},{4,3,2,0},{4,3,3,0},{4,3,4,0},{4,4,2,0},{4,4,3,0},{4,4,4,0},}},
    {{2,2,2,1},{{2,2,2,1},{2,2,3,1},{2,2,4,1},{2,3,2,1},{2,3,3,1},{2,3,4,1},{2,4,2,1},{2,4,3,1},{2,4,4,1},{3,2,2,1},{3,2,3,1},{3,2,4,1},{3,3,2,1},{3,3,3,1},{3,3,4,1},{3,4,2,1},{3,4,3,1},{3,4,4,1},{4,2,2,1},{4,2,3,1},{4,2,4,1},{4,3,2,1},{4,3,3,1},{4,3,4,1},{4,4,2,1},{4,4,3,1},{4,4,4,1},}},
    {{2,2,2,2},{{2,2,2,2},{2,2,2,3},{2,2,2,4},{2,2,3,2},{2,2,3,3},{2,2,3,4},{2,2,4,2},{2,2,4,3},{2,2,4,4},{2,3,2,2},{2,3,2,3},{2,3,2,4},{2,3,3,2},{2,3,3,3},{2,3,3,4},{2,3,4,2},{2,3,4,3},{2,3,4,4},{2,4,2,2},{2,4,2,3},{2,4,2,4},{2,4,3,2},{2,4,3,3},{2,4,3,4},{2,4,4,2},{2,4,4,3},{2,4,4,4},{3,2,2,2},{3,2,2,3},{3,2,2,4},{3,2,3,2},{3,2,3,3},{3,2,3,4},{3,2,4,2},{3,2,4,3},{3,2,4,4},{3,3,2,2},{3,3,2,3},{3,3,2,4},{3,3,3,2},{3,3,3,3},{3,3,3,4},{3,3,4,2},{3,3,4,3},{3,3,4,4},{3,4,2,2},{3,4,2,3},{3,4,2,4},{3,4,3,2},{3,4,3,3},{3,4,3,4},{3,4,4,2},{3,4,4,3},{3,4,4,4},{4,2,2,2},{4,2,2,3},{4,2,2,4},{4,2,3,2},{4,2,3,3},{4,2,3,4},{4,2,4,2},{4,2,4,3},{4,2,4,4},{4,3,2,2},{4,3,2,3},{4,3,2,4},{4,3,3,2},{4,3,3,3},{4,3,3,4},{4,3,4,2},{4,3,4,3},{4,3,4,4},{4,4,2,2},{4,4,2,3},{4,4,2,4},{4,4,3,2},{4,4,3,3},{4,4,3,4},{4,4,4,2},{4,4,4,3},{4,4,4,4},}},
    {{3,0,0,0},{{5,0,0,0},}},
    {{3,0,1,0},{{5,0,1,0},}},
    {{3,0,1,1},{{5,0,1,1},}},
    {{3,0,2,0},{{5,0,2,0},{5,0,3,0},{5,0,4,0},}},
    {{3,0,2,1},{{5,0,2,1},{5,0,3,1},{5,0,4,1},}},
    {{3,0,2,2},{{5,0,2,2},{5,0,2,3},{5,0,2,4},{5,0,3,2},{5,0,3,3},{5,0,3,4},{5,0,4,2},{5,0,4,3},{5,0,4,4},}},
    {{3,0,3,0},{{5,0,5,0},}},
    {{3,1,0,0},{{5,1,0,0},}},
    {{3,1,1,0},{{5,1,1,0},}},
    {{3,1,1,1},{{5,1,1,1},}},
    {{3,1,2,0},{{5,1,2,0},{5,1,3,0},{5,1,4,0},}},
    {{3,1,2,1},{{5,1,2,1},{5,1,3,1},{5,1,4,1},}},
    {{3,1,2,2},{{5,1,2,2},{5,1,2,3},{5,1,2,4},{5,1,3,2},{5,1,3,3},{5,1,3,4},{5,1,4,2},{5,1,4,3},{5,1,4,4},}},
    {{3,1,3,0},{{5,1,5,0},}},
    {{3,1,3,1},{{5,1,5,1},}},
    {{3,2,0,0},{{5,2,0,0},{5,3,0,0},{5,4,0,0},}},
    {{3,2,1,0},{{5,2,1,0},{5,3,1,0},{5,4,1,0},}},
    {{3,2,1,1},{{5,2,1,1},{5,3,1,1},{5,4,1,1},}},
    {{3,2,2,0},{{5,2,2,0},{5,2,3,0},{5,2,4,0},{5,3,2,0},{5,3,3,0},{5,3,4,0},{5,4,2,0},{5,4,3,0},{5,4,4,0},}},
    {{3,2,2,1},{{5,2,2,1},{5,2,3,1},{5,2,4,1},{5,3,2,1},{5,3,3,1},{5,3,4,1},{5,4,2,1},{5,4,3,1},{5,4,4,1},}},
    {{3,2,2,2},{{5,2,2,2},{5,2,2,3},{5,2,2,4},{5,2,3,2},{5,2,3,3},{5,2,3,4},{5,2,4,2},{5,2,4,3},{5,2,4,4},{5,3,2,2},{5,3,2,3},{5,3,2,4},{5,3,3,2},{5,3,3,3},{5,3,3,4},{5,3,4,2},{5,3,4,3},{5,3,4,4},{5,4,2,2},{5,4,2,3},{5,4,2,4},{5,4,3,2},{5,4,3,3},{5,4,3,4},{5,4,4,2},{5,4,4,3},{5,4,4,4},}},
    {{3,2,3,0},{{5,2,5,0},{5,3,5,0},{5,4,5,0},}},
    {{3,2,3,1},{{5,2,5,1},{5,3,5,1},{5,4,5,1},}},
    {{3,2,3,2},{{5,2,5,2},{5,2,5,3},{5,2,5,4},{5,3,5,2},{5,3,5,3},{5,3,5,4},{5,4,5,2},{5,4,5,3},{5,4,5,4},}},
    {{3,3,0,0},{{5,5,0,0},}},
    {{3,3,1,0},{{5,5,1,0},}},
    {{3,3,1,1},{{5,5,1,1},}},
    {{3,3,2,0},{{5,5,2,0},{5,5,3,0},{5,5,4,0},}},
    {{3,3,2,1},{{5,5,2,1},{5,5,3,1},{5,5,4,1},}},
    {{3,3,2,2},{{5,5,2,2},{5,5,2,3},{5,5,2,4},{5,5,3,2},{5,5,3,3},{5,5,3,4},{5,5,4,2},{5,5,4,3},{5,5,4,4},}},
    {{3,3,3,0},{{5,5,5,0},}},
    {{3,3,3,1},{{5,5,5,1},}},
    {{3,3,3,2},{{5,5,5,2},{5,5,5,3},{5,5,5,4},}},
    {{3,3,3,3},{{5,5,5,5},}},
    {{4,0,0,0},{{6,0,0,0},}},
    {{4,0,1,0},{{6,0,1,0},}},
    {{4,0,1,1},{{6,0,1,1},}},
    {{4,0,2,0},{{6,0,2,0},{6,0,3,0},{6,0,4,0},}},
    {{4,0,2,1},{{6,0,2,1},{6,0,3,1},{6,0,4,1},}},
    {{4,0,2,2},{{6,0,2,2},{6,0,2,3},{6,0,2,4},{6,0,3,2},{6,0,3,3},{6,0,3,4},{6,0,4,2},{6,0,4,3},{6,0,4,4},}},
    {{4,0,3,0},{{6,0,5,0},}},
    {{4,0,3,1},{{6,0,5,1},}},
    {{4,0,3,2},{{6,0,5,2},{6,0,5,3},{6,0,5,4},}},
    {{4,0,3,3},{{6,0,5,5},}},
    {{4,0,4,0},{{6,0,6,0},}},
    {{4,1,0,0},{{6,1,0,0},}},
    {{4,1,1,0},{{6,1,1,0},}},
    {{4,1,1,1},{{6,1,1,1},}},
    {{4,1,2,0},{{6,1,2,0},{6,1,3,0},{6,1,4,0},}},
    {{4,1,2,1},{{6,1,2,1},{6,1,3,1},{6,1,4,1},}},
    {{4,1,2,2},{{6,1,2,2},{6,1,2,3},{6,1,2,4},{6,1,3,2},{6,1,3,3},{6,1,3,4},{6,1,4,2},{6,1,4,3},{6,1,4,4},}},
    {{4,1,3,0},{{6,1,5,0},}},
    {{4,1,3,1},{{6,1,5,1},}},
    {{4,1,3,2},{{6,1,5,2},{6,1,5,3},{6,1,5,4},}},
    {{4,1,3,3},{{6,1,5,5},}},
    {{4,1,4,0},{{6,1,6,0},}},
    {{4,1,4,1},{{6,1,6,1},}},
    {{4,2,0,0},{{6,2,0,0},{6,3,0,0},{6,4,0,0},}},
    {{4,2,1,0},{{6,2,1,0},{6,3,1,0},{6,4,1,0},}},
    {{4,2,1,1},{{6,2,1,1},{6,3,1,1},{6,4,1,1},}},
    {{4,2,2,0},{{6,2,2,0},{6,2,3,0},{6,2,4,0},{6,3,2,0},{6,3,3,0},{6,3,4,0},{6,4,2,0},{6,4,3,0},{6,4,4,0},}},
    {{4,2,2,1},{{6,2,2,1},{6,2,3,1},{6,2,4,1},{6,3,2,1},{6,3,3,1},{6,3,4,1},{6,4,2,1},{6,4,3,1},{6,4,4,1},}},
    {{4,2,2,2},{{6,2,2,2},{6,2,2,3},{6,2,2,4},{6,2,3,2},{6,2,3,3},{6,2,3,4},{6,2,4,2},{6,2,4,3},{6,2,4,4},{6,3,2,2},{6,3,2,3},{6,3,2,4},{6,3,3,2},{6,3,3,3},{6,3,3,4},{6,3,4,2},{6,3,4,3},{6,3,4,4},{6,4,2,2},{6,4,2,3},{6,4,2,4},{6,4,3,2},{6,4,3,3},{6,4,3,4},{6,4,4,2},{6,4,4,3},{6,4,4,4},}},
    {{4,2,3,0},{{6,2,5,0},{6,3,5,0},{6,4,5,0},}},
    {{4,2,3,1},{{6,2,5,1},{6,3,5,1},{6,4,5,1},}},
    {{4,2,3,2},{{6,2,5,2},{6,2,5,3},{6,2,5,4},{6,3,5,2},{6,3,5,3},{6,3,5,4},{6,4,5,2},{6,4,5,3},{6,4,5,4},}},
    {{4,2,3,3},{{6,2,5,5},{6,3,5,5},{6,4,5,5},}},
    {{4,2,4,0},{{6,2,6,0},{6,3,6,0},{6,4,6,0},}},
    {{4,2,4,1},{{6,2,6,1},{6,3,6,1},{6,4,6,1},}},
    {{4,2,4,2},{{6,2,6,2},{6,2,6,3},{6,2,6,4},{6,3,6,2},{6,3,6,3},{6,3,6,4},{6,4,6,2},{6,4,6,3},{6,4,6,4},}},
    {{4,3,0,0},{{6,5,0,0},}},
    {{4,3,1,0},{{6,5,1,0},}},
    {{4,3,1,1},{{6,5,1,1},}},
    {{4,3,2,0},{{6,5,2,0},{6,5,3,0},{6,5,4,0},}},
    {{4,3,2,1},{{6,5,2,1},{6,5,3,1},{6,5,4,1},}},
    {{4,3,2,2},{{6,5,2,2},{6,5,2,3},{6,5,2,4},{6,5,3,2},{6,5,3,3},{6,5,3,4},{6,5,4,2},{6,5,4,3},{6,5,4,4},}},
    {{4,3,3,0},{{6,5,5,0},}},
    {{4,3,3,1},{{6,5,5,1},}},
    {{4,3,3,2},{{6,5,5,2},{6,5,5,3},{6,5,5,4},}},
    {{4,3,3,3},{{6,5,5,5},}},
    {{4,3,4,0},{{6,5,6,0},}},
    {{4,3,4,1},{{6,5,6,1},}},
    {{4,3,4,2},{{6,5,6,2},{6,5,6,3},{6,5,6,4},}},
    {{4,3,4,3},{{6,5,6,5},}},
    {{4,4,0,0},{{6,6,0,0},}},
    {{4,4,1,0},{{6,6,1,0},}},
    {{4,4,1,1},{{6,6,1,1},}},
    {{4,4,2,0},{{6,6,2,0},{6,6,3,0},{6,6,4,0},}},
    {{4,4,2,1},{{6,6,2,1},{6,6,3,1},{6,6,4,1},}},
    {{4,4,2,2},{{6,6,2,2},{6,6,2,3},{6,6,2,4},{6,6,3,2},{6,6,3,3},{6,6,3,4},{6,6,4,2},{6,6,4,3},{6,6,4,4},}},
    {{4,4,3,0},{{6,6,5,0},}},
    {{4,4,3,1},{{6,6,5,1},}},
    {{4,4,3,2},{{6,6,5,2},{6,6,5,3},{6,6,5,4},}},
    {{4,4,3,3},{{6,6,5,5},}},
    {{4,4,4,0},{{6,6,6,0},}},
    {{4,4,4,1},{{6,6,6,1},}},
    {{4,4,4,2},{{6,6,6,2},{6,6,6,3},{6,6,6,4},}},
    {{4,4,4,3},{{6,6,6,5},}},
    {{4,4,4,4},{{6,6,6,6},}},
};

TEST_SIMPLE(TestShellQuartetItr){
    CppTester tester("Testing the ShellQuartetItr classes");

    auto wf=make_wf();
    ShellQuartetItr qt_it(wf.system->get_basis_set("PRIMARY"));
    for(const auto& cq: corr_quartets)
    {
        const auto& idx=*qt_it;
        //printf("{{%d,%d,%d,%d},{",idx[0],idx[1],idx[2],idx[3]);
        std::stringstream ss;
        ss<<"Shell quartet: ( "<<cq[0]<<" "
                               <<cq[1]<<" | "
                               <<cq[2]<<" "
                               <<cq[3]<<" )";
        tester.test_equal(ss.str(),idx,cq);
        auto corr_bf_itr=corr_bfs.at(cq).cbegin();
        for(const auto& bf_idx:qt_it)
        {
            std::stringstream ss1;
            ss1<<"Basis function quartet: ( "
               <<cq[0]<<": "<<(*corr_bf_itr)[0]<< " "
               <<cq[1]<<": "<<(*corr_bf_itr)[1]<<" | "
               <<cq[2]<<": "<<(*corr_bf_itr)[2]<< " "
               <<cq[3]<<": "<<(*corr_bf_itr)[3]<<")";
            //printf("{%d,%d,%d,%d},",bf_idx[0],bf_idx[1],bf_idx[2],bf_idx[3]);
            tester.test_equal(ss1.str(),bf_idx,*corr_bf_itr);
            ++corr_bf_itr;
        }
        //printf("}},\n");
        ++qt_it;
    }
    tester.print_results();
    return tester.nfailed();
}
